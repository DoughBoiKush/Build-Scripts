--- openssl.c	2018-12-28 21:12:54.657678200 -0500
+++ /dev/null	2018-12-28 21:41:13.967211700 -0500
@@ -327,6 +327,29 @@
   SSL_CTX_set_default_verify_paths (ssl_ctx);
   SSL_CTX_load_verify_locations (ssl_ctx, opt.ca_cert, opt.ca_directory);
 
+  /* Set X509_V_FLAG_PARTIAL_CHAIN to allow the client to anchor trust in
+   * a non-self-signed certificate. This defies RFC 4158 (Path Building)
+   * which defines a trust anchor in terms of a self-signed certificate.
+   * However, it substantially reduces attack surface by prunning the tree
+   * of unneeded trust points. For example, the cross-certified
+   * Let's Encrypt X3 CA, which protects gnu.org and appears as an
+   * intermediate CA to clients, can be used as a trust anchor without
+   * the entire IdentTrust PKI.
+   */
+  X509_VERIFY_PARAM *param = X509_VERIFY_PARAM_new();
+  if (!param)
+  {
+    /* TODO: How does Wget handle a malloc failure? */
+    goto error;
+  }
+  else
+  {
+    /* Return value is the old options */
+    (void)X509_VERIFY_PARAM_set_flags(param, X509_V_FLAG_PARTIAL_CHAIN);
+    SSL_CTX_set1_param(ssl_ctx, param);
+    X509_VERIFY_PARAM_free(param);
+  }
+
   if (opt.crl_file)
     {
       X509_STORE *store = SSL_CTX_get_cert_store (ssl_ctx);
